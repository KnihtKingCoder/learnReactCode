Lecture : 2   {Create React Project}

In these Section we normally discuss about how to do installation of React using of two ways 
1 Way :-
npx create-react-app <foldername>
Now for run use : npm run start

2 Way :-
In these we using vite Libray(these is the bundle of javascript code)

npm create vite@latest
npm install
Now for run use : npm run dev

also we here do some implement like that whose file is not used delete them and some simple code implement and run them

Lecture 3: {Understand react flow and structure}
In the Lecture we see about what is the structure of react on both way and understand each element work.
The main work of index html file where we shown the our application their we have task we have to implement all html content in Javascript syntax and that after we have to render in index html file.
In the 1 way he have a file of index on public folder and we do render data on app.js which is are on src folder. we write code on another JS file on a function and then import on app.js 
In the another way we have index file on outside not in any folder and in that we use same all as like 1 way but in that one differnce in that we add js file on index file using of script.
Now in Vite we make another folder in that folder is compulssary to the function name is capital
and if we return more than one function or content then we use the fragment (<></>)
and in same as do basic react
The best practice of that if we make new file then the first letter is capital and the under file function name is also capital.
if we use the any varible in html tag then use varibale in curly brackets {varibale}


Leture : 4  {Create own react library}
In that leture we create custom react. In that first we do create one html file and other is js file and connected js file in html file via using of script tag. in html file add one div which id is give root and another is script tag.
Now move on js file in that we do first take element of div via using of documentgetElementById and create custom element name of reactElement object where we use some properties type='a', props={href:"",target=},childeren="content" overall we create row data of one link. now for make react app we have to render these data. so that's why we call a method for it wehre we give argument of reactElemet and div element and now we have to make on method of them. in method first we create element so we use DOM for them and create element of using of reactElement and setAttribute of href and link and now next we add them in divElement. finally we create on custom react.
In that one problem are here we give two time setAttributes command so that's why we use another approach in that approcah createElement using of DOM similar but in case of props we use loop like that for(const prop in reactElement.props){if(prop==='children')continue  domEement.setAtrribute(prop,reactEleement.prop.{prop})} that after add them in divElemengt container.
Now further move on 01vitereact file and in main.jsx file we say that we render a App which is ultimatly function so that why we make a function on same file and after render these function and we are succssfully render these function.
Now we take reactElement and paste on main.jsx and run the reactElement instead of function. beacause in react he split any html element like that. but these is not executed. the reason behind him in customreact we create cuto render method but in main.jsx he use own render method.
Now we use simple html element and return on s variable and after render it now it's working.
Now we create html element using of react. in create give own method or syntax. In react const element=React.createElement('tagname',{attributes},'content'). that after render that element.
In that if use variable on function then we use {variable} on them. in that variable we write only evalutaed expression it means final outcomes.No write any javascript code on curly braketes only write final outcomes.


Leture 5 {A react Projet}
In that lectrure we create a project using if vite and in that create a variable and make two button and call the two function on that varible that work is add value and remove value. According to that variavble value is increase in memory but these is not implemented on html content.Promble is he not working on UI updation. The react say that all UI updation is my work not your.Then react say that you use many varibale in more place but all UI updation is doing me. So react say i have some hooks for them.React have many hooks and each hooks have own work and only do these work.
We use useState hook for them and useState(num) where num is varible value. for store that const [counter,setCounter]=useState(15) where counter is varibale and setcounter is a fucntion and that function control the counter name of varibale. According to these counter deafult value is 15 and setCounter is control the counter. in addValue function we write for increase counter value setCounter(counter+1) and in decreaseValue funtion setCounter(counter-1) that after use these fucntion in anyware all place where have counter name of variale and we use them then he implaned the varivle value according to the fucntion call.


Leture 6 Virtual DOM, Fibre and reconciliation
** These Leture very Importand for Interview prospective **
-->React Fiber is an ongoing reimplementation of React's core algorithm. It is the culmination of over two years of research by the React team.

-->The goal of React Fiber is to increase its suitability for areas like animation, layout, and gestures. Its headline feature is incremental rendering: the ability to split rendering work into chunks and spread it out over multiple frames.

-->Other key features include the ability to pause, abort, or reuse work as new updates come in; the ability to assign priority to different types of updates; and new concurrency primitives.

--> What is reconciliation?
reconciliation
The algorithm React uses to diff one tree with another to determine which parts need to be changed.
update
A change in the data used to render a React app. Usually the result of `setState`. Eventually results in a re-render.
It means the react element tree and user wite element tree are comapre and the chnged thing he update on the UI.

-->Reconciliation is the algorithm behind what is popularly understood as the "virtual DOM." A high-level description goes something like this: when you render a React application, a tree of nodes that describes the app is generated and saved in memory. This tree is then flushed to the rendering environment â€” for example, in the case of a browser application, it's translated to a set of DOM operations. When the app is updated (usually via setState), a new tree is generated. The new tree is diffed with the previous tree to compute which operations are needed to update the rendered app.

-->The key points are:
Different component types are assumed to generate substantially different trees. React will not attempt to diff them, but rather replace the old tree completely.
Diffing of lists is performed using keys. Keys should be "stable, predictable, and unique."

-->What is a fiber?
We're about to discuss the heart of React Fiber's architecture. Fibers are a much lower-level abstraction than application developers typically think about. If you find yourself frustrated in your attempts to understand it, don't feel discouraged. Keep trying and it will eventually make sense. (When you do finally get it, please suggest how to improve this section.)
We've established that a primary goal of Fiber is to enable React to take advantage of scheduling. Specifically, we need to be able to
->pause work and come back to it later.
->assign priority to different types of work.
->reuse previously completed work.
->abort work if it's no longer needed.


Leture 7 {Use Talwind in react using of vite}
In these we make project of using of talwind. in that project first we use deployed react using of vite so we use npm create vite@latest. Now we have to deployed talwind so first we go to that folder.cd 02talwindprops now we have to deployed talwind sp we use go to the framework guids and use vite framework beacuse be use vite on that project.Now next use npm install -D tailwindcss postcss autoprefixer That after we use npx tailwindcss init -p that command for make talwinncnfig file.
Now go to that folder then modify the material  "./index.html",
"./src/**/*.{js,ts,jsx,tsx}", Now these content used to scan the talwind code on the all file like index.html and in src folder file. now go the index.css folder which is prsent on src folder and write these code @tailwind base;@tailwind components;@tailwind utilities;.now we are to ready to use talwind code on these project.
Now we take a template code of talwind in app.jsx and some error occur like the class, img tag beacuse in recat class is replaed by className and img tag have t do closed. Now next we are go to the DevUI website and pick one card element syntax. and that card code is copy on a file card.jsx in the components name folder on src.
Now card import in App.jsx and call that on App function. Now one thing is so simple be don't do whole code on many times if we want card many times. only call the card on function and the card is copy. but in that thing one promble are here all card have same name and content for do these react give props. so now we use props.after that when we use props on console screen then he show empty array so that why we have to give some input on an App.jsx in that we called the fucntion <Card/> in that we have to give props content like <Crad  name="knight"/> and that after that name is hsow on console screen. like we also called a object or array o that propmt.now go to Card and write props.name or also be driect use name via taking name instaed of props.Now we have access to chnage multiple card on using single card. In many cases their are many memebers the possible is one member forget to promot thing so their have one solution we have to set deafault value on card function parameter.

leture 8 {Discuss 1 interview question}
In that lecture we discuss about one interview question in that question in counter app which is make in last project in that project we se setCounter(counter+1) in that thing the interviewer asked when we use copy setcounter many things then what is the result then the anwser is the useState calls the setCounter and the setCounter is Copy many times but the setCounter is working one times only.The all setCounter comes on bundle ad say all have working is same so the result is only 1 plus on counter.
The hidden featurs of setCounter is it give a callback function.
So if we need to multiple times work setCounter then we use callback on them and take previous call variavle and do plus 1 of them like setcounter(prevCounter=>prevCounter+1) doing by these if you copy 4 times then he add 4 on input of useState.


lecture 9 {Backgorund Changer Project}
In that leture be make a project of background color changed viw using of vite and talwind so according to leture 7 we implmented talwind in these project and in that project we first create a useState in which create two variable color and setColor name fucntion which is help to working of color and initail we set usetate olive colro. that after create a div which we made a full page and set the background color of background using style property and also give some className css of using talwind and now we create another div for all button and now create anoter div in which we mentioned all button in button give css propery in className using talwind giving also background in button using of style now further we have to change backgorund color so that's why we call onclick function on all button and in function we make arrow function like that onCLick={()=>setColor(" ")} and in under fucntion we call the setColor fucntion and in we give color according to the button. 


Lecture 10{Password genertor password}
In these lecture we Make a project which name and work is Password Generator.In that project we generate a password using of hooks which is feature of React.In that we have many fatures such that we give it length of password and also checkbox of number and character for doing enable and disbale. These means if you enable number then number show on passowrd and for doing disbaled number are not included on password just similar for spaceial charcter.
Now start the project first we have to install react for that install react and for css install talwind according to lecture 2 and 7.
further move to the functinlity of porject. first in project the length of password in increase or decrease according to the slider so for that we use useState hook.in useState deafult value take 8 because the deafult value of passowrd is 8 andte variable accoding to the length.Now further move to the number and charcter and in number we have to allowed for notallwoed in password so we use true for allowed number and notallowed for false using of checkbox of number so that's why we set deafult value of useState is false. and take varivale lik ethat numberAllowed and setnumberallowed just similar we do that charcter.Till nom we cover slider for length, for enable number and charcter on password but still two functionality are remaining one is password shown on inout and another a copy button for copy that passowrd. for password we create a useStaet and take varibale password and the deafult value is empty. we conver at further via direct fucntonality of password.No we further move to the main functionalty whcih is passwrod genertaor. we have many way of generate password gernatir which is length slider number allowd chrarcetrr allowed for them we have to make function like that when do something for them the password is refresh or changed for them we use a useState which name is usecallback where have to parameter one is a function and another is all depnedies which to matter to chnaged the password. for use them first decalre useCallback and then use them on passowrdGeerator variable like const passwordgenerator=useCallback(fn,depencies) in fn we are doing main working on password first we create a string pass and another create a varible in which be enter all charcter and now we start conditin if number is allowed then number also add them in string and if special charcter is allowed then special charcter is also add them in str. now we use a loop in that we take limit of pass.length and write line on loop is let char =Math.floor(math.random()*str.length+1);pass=str.charAt(char). and now use setPassword to set pass. and in depencis we use length for increase or decrease , numberallowed for the number is aloowed or not in password, charAllowed for the char is allowed or not in password. and also use setPassword in  them. 
After That we make some UI thing like input, a copy button, a slider, two checkbox one for number another for charcter.
not we have to run the passwordGenerator password for the normal we did't call  the fucntion so that's why we use another hook that is useEffect in the differnec between useeffect and callback hook is callback function is for working on depencies optimization ana useEffect hook is for any chages on that depencies then again call that function which you call call in that.
Now we have another task that is use copy button to copy the password in clipboard so for that we use another hooks for react that us useRef that hook used to for taking refernece of any other element or other things.for copy the password use onclcik function on button then use callbackin these fucntion and use these code of line window.navigator.clipboard.writeText(passwrod).and the use of good experice to the user the what content copy for that we use passwordref i mean use of useRef hook. for them we use these code passwrodRef.current?.select(). for more further optimization and select range for copy like in these code only three word of password are copy       passwrodRef.current?.setSelectionRange(0,3)



Lecture 11 {Currency Changer Project}
In these Project we make a currency chnager where we do chnage one currency to another currency like how much INR in 1USD and vicevera like that we make many currency selctore. That for we use one api where we take all types of value of currncy first we fetch the api and tal all types in string format then we chnage him in json format and then we handle like him object and take all keys and value keys refers to the currency name and value refers to the that value of currency. in that project we are manily focus on functionalliy not a UI of project. 
So for that first we setUp these project using of vite and handle him in talwind in that project.for making these projcet we have to use hooks but these project we have not any type of hook.But we have one choice via react we make a custom hook so for that me make  a folder on src name is hooks and that folder we make a js file which name is useCurrencyhook.don't use jsx file beacuse in custome hook majorly part is js and that return purly js so that's why we use js file.In that custom hook we make a fucntionality of currency info it mean in the function we return a currency detials. for makeing them we use two hook one is useEffect which is help to fetch the api and another is useState which is help to hold data of currency details and the function which is calling they return the details. so for that first we use useEffect in that first parameter is callback function and another is depencies.In callback function frist we fetch api and after that using of .then we change api string details to change json and after that use useState hook and that using we save currency details on data like const[data,setData]=useState({}) and using  of .then((res)=>setData(res[currency])) that using of we save detils on currency and in useState detafult value is empty object because when api is not fetch then the empty object no any type of error occured. and that after return data and after that export overall function. according to these fucntionality we make a hook.In any other file when we use these hook then only we called the whole function then the data is return jsut simiplar to the predefined hook.
Now we make components for them for that like in currency we use a inputBox so for that we have to make functionalltiy of inputBox. In inputBox the UI thing is copy for the fucntionality we make a function and in fucntion we take many elements(variable name) for wokring the fucntion the element is label,amount,onAmonutChange,currncyOption,selectCurrency,amountDiabled,currencyDisabled and className also. The label  is for from or to which is to mention which currency change to which currnecy,the amount is the chnaging amount and the amount which you give input ,onAmounthnage that is taking because when we change in then automatic the fucntion is working,currencyOption is taking for when we chnage currencyOption then the automatic fucntion is called.selectCurrency for that which currency you take and the default currnecy is usd , amountDiabled for when the user don't give any amouunt the default value is false when any user give amount then amountdiabled is on,the same is we use currencyDiabled and in that we set deafault value is false use when any user change curreny option then the currncyDiabled is true.Now we have to use the varibale or element in content so first we move to the input of amount or label for them we set label variable and in amount we set many things like set the amount.disaled equal to amountdisabled and next we move to the onAmountChnage it is used to the when change the amount these fucntionality is work . for in that we write onCLick={(e)=>onAmountChange && onAmountChnage(Number(e.target.value))} first we check onAmountChnage is happend or not that after we execute these fucntion. Now next move to the select currency filed for in that same as amount change we inject these variable in inout filed like label, diabled=currencyDIabled and use selectCurrency for in onCLick={(e)=>onAmountChange && onAmountChnage(Number(e.target.value))} and now we have the use loop for use many currnecy in them so for that we use these code {currency.map((currency)=>(option key={currency} ,value={currency}>{currency}<option>))} in the key used for distinguish the distinct option. "remeber the key in use loop in react".
for in big project for handle all components we use these file index.js and inject all file in that file.
for making more optimization then use useId for giving unique to the label for them first be decalre them and after we use them and then use const amountUnqiueID=useId()  after that in label we use htmFor={amountUnqiueID} after that bind him in a input.
Now we further move to the mian work on app.jsx where we give final touch. In that first we import data of inputBox and the import the custom hook use for these hook. for them we have to set some hook (i mean create some variable) the first is we use useState and create amount variable , from varibale for use where to where to chnage, same create to variable now we use customhook we set the first from varible it will not crash beacuse we set a default input them that is usd.for setting currency option we have a return value of currency and and that is come on string format beacsue we called api and taking for it. so we chnage them in object and taking all keys in a variable using of Object.keys(currencyInfo) currencyInfo means data which is return by the custom hook.const currencyInfo=useCurrencyinfo(from). for the functionality of swap in the swapt the from value to and also change the amount so fo the setConverAmount(amount) and also set the converted amount in setAmount. after that we have to also convert the amount of one currency to another so for that we make a fucntion and the fucntion we call the another function setConvertedAmount and in the setConvertedAmount we write amount*currencyInfo(to) it mean multiply thta amount which you enter and multiply the chnaging amount which is present on to varible.Now we move to the final touch for them first we copy the ui material and paste them and first change the background image and that after that in form we call only convert fucntion.After that we go to tha input box of amount in that first m=we give amount,currencyOptiona and give to the what happedn after changing amount so we called a fucntion which is onAmountChange and in fucnion we set the new Amount which will be come setAmount(amount), for selct currnecy we set the seclectCurrency(from),for chnage amount we have to also called onAMountchnage fucntion and set the amount in setAmount. and after that we have a swap button in swap button we called a evenet which is onClick and in the evenet we call the fucntion swap.Now move to the another input box where we have to show a result. in them just similar write the code which is write on first input box with changing some thing like form replace to and in amount giving convertedAmount




Lecture 12 {React Router}
These Leture we make another project the name of project is react router. In that project we are focusing on the Router of Elements or we say the Page routing. In that project we make a web pages in multipli components like header, footer,home,contact,about and after that we attch them and that's called routing.
first we we stup the project using of vite and talwind that my project is start for making. That after we handle the all pages in the components folder.that after we have to use routing for that we have to install routing feature so for that we use these command "npm install react-router-dom".In the react-router-dom they give many features in that we give link tag for instaead of a tag beacuse in a tag he refresh the whole page but in react this concept are not exit so for doing override them we use link tag and for use advance feature of link we use NavLink tag these tag give some adavance feature like he giveing which link is active and which link is not active these feature is like osam.In link tag we use to instaed of href of a tag.In Navlink we have a additinal feature that is the link is active or not we have to use that for use we have to do some things which is we giving className property in callback function and the paraamerter is isActive and writting in all css property in fucntion for active isActive we have to write in function is {isActive?text-orange-700:text-gray-700}. it means if link is active then text color is orange and when the link is not active then text color is gray.
for the making website dynamic so for that we have feature the feature name is outlet. we make a file in src and in we call the header page and footer page and between them we enter outlet and the outlet we called in main.jsx. In the main.jsx we use router we render the a tage which name is RouterProvidar these is self tag in tag we mentiioned the router router={router}. now we use these router to render the pages.for that we write some code the code is const router=createBrowserRoute([]) in the brakets we handle the pages route. for handle first we write path it means what is the page path and after that we write element it means which element want to henadle we write in code {path:'/',element:<layout/>} and these is the for layout pages for handle more pages then we add chilren too. and in children we write children=[{},{},{}] in the children the curly brackets are denotes how much element you want to render.We have a another way to routing the pages these is the good way to routing the syntax is 
const router=createBrowserRoute(createRoutesFromElements(<Route path="/" element="<home/>">)) that simplar we add many pages and the path means what path you want to send and the elemet means which page you want to render.Now we make another router in that we take input from url and write on page. for that doing let one page we have the page name is user and that we have to want some data to url for that we have to make router the router path is user/:userid give . for doing that the url /user/... instaed of ... if you give anything in the url it is save on userid and these userid handle on the page user we have to access of userid same use variable name in that page for access. for do these we have to taking in hook the name of hook is useParams and is taken by the react-router-dom. and for access the input write a code const {userid}=useParams(). now you have input value in userid .now you use them anywhere in that page.Now we make another comonents the name of that is github.jsx in that page we fetch the api and take some value to the api and use them in oage like the github user photos follower,name and many things we handle.for fetch the api we use useEffetct hook.after fetching the details we have the save of api data for that we use anotehr hook the hook name is useState in the hook we save the data.when we fetch any api then for the more optimization we use another method of react-router-dom the method is loader. In loader we direct use and using of callbakc function.for doing that the fecthing proccess is done in the another fucntion in  the same page but it is worst use case the best is handle it in another file but in case we handle in same page.


Lecture 13 {Context Api}
In these Leture we study context api these is the most important api. Let's discuss in using of some senreio. In the 1 way are take one card in the card if we change any thing then we called in using of app.jsx file and in file we use variable name and give the value in tag where we called him.In the we are doing best approcah and these is good. Now we have to make a deshboard in these page we have one left side bar and right side one is upper bar and another is bottom bar and in upper bar we have a card.we have a chllange we have to change in card just like in 1 approch but in case frist give username in dashboard page then he split in left bar and right bar then that after he split on upper bar and bottom bar that after he going on card via using of upper bar.That after we observe that the no any use of right bar and in upper bar these is the worst thing.The better aprocach for them we can make a global object and set the variable or username that after direct we called the global object and use these username in card.Now you seen that the benifts of the making of global object. In that using we have to not use the variabe or username in many times diect we called the global object and use them.For the using of that's concept global object is called context api.
Context api is only on include on react. these is no exist on outside react.Their are another way to management name is redux that is used to managmenet of state.The data is transfer in orgainsed way. Their are many sub divided parts of redux that is react-redux and another is redux-toolkit these is short form is RKT.And no addtiional pakage install to need for context api, these is come with react.You inject the context api frist on making project or you have to mid and you have to end the choice is here. The context api is use in almost all project. beacuse he handle the state.
Now we start the making project for start first intsall the react on project using of vite.For makeing global content we make UserContxt.js file in context folder.For create context only do these React.createContext(). and after that export that. After do it your context is complete.All contxt are giving the provider for using varivale. so for that all context have provider. using upper command we make UserContext and they provide a provider.for using it use these <UserContext></UserContext> and in between them use element which you want to use. after do these we make another file which name is UserContextProvider.jsx. after that we make a method and export them the method name is UserContextProvider.In these method we pass one parameter the name of parameter is {children}. the children means any div or any element which you pass.after that we return something that is <UserContext.Provider></UserContext.Provider> and between these tag we mentioned the parameter the parameter is {children}. This is not much for that we have to use some variable to, where we store data.fro them use the useState hook and that we make user name of variable and working them we make setUser name of fucntion. and for them we set Deafult value is null.we make the provider but still we have not pass the props or value for accessing the value we use or write value={{User,setUser}} in tag.
Now we move to the Appp.jsx file and in file we deployed UserContextProvider and return them in <UserContext.Provider></UserContext.Provider> now we have to give some elements so for that we move to the componets flolder and make two file login.jsx and profile.jsx.In login.jsx we first deployed 2 hooks that is useState,useContext.useState for manage variable and useContext is use for userContext which is make before in user.Context file.and in file we make normal some elements username and password. now we triggerred on button and call a fucntion.And in fucntion first we called a fucntion PreventgDeafult(). and after that use setUser which we taken by the useContext(userContext)and in that we pass the value of username and password. that using we transfer the props.Till now we understand the how data is send using of context.

Lecture 14 {Context api 2}
In these We are making another project using of context api, The name of project is todo app. In these app are also focusing on local storge. Let's take overview of these project. In these project we have one input box or one add button. when any thing enter in input and press add button then the item show in a down. and these store in local storage of that browser. That means when referse the page but still the add things are not deleted. 
For making them first we setUp the project using of vite and tawlwind commands. after that we move to the making context. beacsue in these project we use the context api. and these is compulssary in project because using of that tansfer the props value in one file to the other file i mean one element to other file.In context file first we make todoContext.js file in that file we use some commands for setup the context file. just like first we createContext and under them we enter many paramerter and function for help to making these project.just like in fucntion of createContext first we enter object and under {todo:[id:1,todo:"",completed:false],addTodo(),updateTodo(),deleteTodo(),toggleComplete()} and export them and after that we make provider for provide the variable in the using. after that we again export useConetxt(todoConetxt) todoContext refers to the the fucntion of createContext.after we move the app.jsx file and copy the html content in the file. after we are move to the working of fucntionality.like addTodo,updateTodo,deleteTodoand toggleComlete for using them we make variale and fucniton using of useState after that we make useEffect to the store todo data on localStorage.



Lecture 15 {Redux Toolkit}
In these Recture we are discuss about redux toolkit.For the statring the first we are discuss about journey and impletation of redux.In React in that time we are all work in doing in function . But some in before we are doing in classes based work.In the present time redux is moderize way and it's called redux-toolkit.for redux-toolkit we are going to that website.In the react we say that we have one is React and other is React-Dom for them we say that both are a libray in a own.IN react we are using in a web then we use react-dom and if we using it on mobile app then we use react-native.Same as Redux is a state management libraray.In the similar of using of react we use react-dom and same as we use for redux we use react-redux these is the like a bridge for using a redux in react.In the first we have a promblem of props which is use the element.Then that promblem override the context api.In that we make a container in which we take all props like content and using of hooks we use the props in anywhere.In the using of use we take these and where we use that we wrapped them in provider.These story in so late before them many things are come.before redux we are using of flux. the articture design by facebook, because the state manganement come are also come in facebook. In the flux we are using of data flow in that means how data is enter in flow how upptaed or automate update and after the access the data in them that are happen in structured way.If it's does not happen then the promblem are ocuurs.These data flow is not good. so after that analyzing a conference is occur,In that a programmer first time introduce about redux,it is a better version of redux.In that introcude about single source of truth is hone chiye, the state is only read,You should never modify your state and you nerver muted the state,The changes of store in happen in function,directlly does not chnage anything,Chnages should be done in pure funciton,fucntionallty if going the way of reducer, the all work in done in proper mechanism.These all done in a cofernec of redux. 
The redux is a independent libraray. It is used in react,vue, and also used in javascript fraework.so that's why redux told a line that is A Predictale state Container for JS Apps.The present time he introduced about Redux-toolkit and these is told The official,opinionated,batteries-included toolset for efficent redux development.For them many propblem are come and that promlblem override by the redux-tollkit, these is a battery included, these told does not do thousand set-up, i give you simple flow and many internally things i mannged them.Just like that extration is more, for makeing store is simpe way. In that redux-toolkit therir have built-in middleware.Their end of history of redux.
Now we are common some concept of redux such as store,reducer,useSelctor,useDipatch.In the store we make a container like structure in that we access all thing in single source of truth These we make like global variable,In the Reducers we are using of reducer we are doing changes in store and which store chnages beacuse their many types of store Reducer what controls and How update the changes all was done in fucntionality way reducer is like a object,After that we have to study in two more method that's is useSelctor and other is useDispatch.In the useSlectore we use when we have to select onything or value and in useDipatch when we use when we have to dispatch anything or value.
Now we start making a project for better understanding. For that first we install react in project using of vite and after that using of redux we install some redux libray by using of some command such as:npm install @reduxjs/toolkit,npm install @reduxjs/toolkit.After that in that project first we run the project and see that it's proper working or not. After that we make a store for them so for that we make app name folder in src folder and make file store.js on app folder.In store.js file it is not real store for making store me import configureStore in our file.After the we export a store like export const store=configureStore({}) After that store is ready but it's not fully store.After that we make some reducers,In that we called slicer.For making them we make a folder feature in that thier many feacture like login feature,todoFeature thier are many feature. For that time we make todoFeature. In the making of reducer we first create a file which name is todoSlice.js and for that make a folder todo in feature folder.For maing we reducer we use two method createSlice and nonoId which we import in our todoSlice file.in that method createSlice is used to create reducer and nonoId for produce uinque id.In for initial the what is the look of store for that we create initail phase in the phase it is empty or take some data on fecting database or some deafult value.For them we carete a instialState, we create it in a object. bceause it handle multiple things.in first we mendtiona array todo:[{}] and by default we metion soem value in them like todo:[{id:1,text:"hello world"}].After that we create a slice and that export, export const todoSLcie=createSlcie({name:"todo",intialState}) in createSlice we give some thing in a object format like first we give name and anotehr instaialState of strore and one is reducer for making them wriet reducers:{} in todoslice.and in redcuers object we write property and fucntion only.Like reducers:{addTodo:()=>{},removeTodo:()=>{}} in context api we only giving decalration but in reducers we write defination also and in defination we have two argumnet in all property or function state and action state give you hand to hand situation of your array what is happen how much item are here it is empty or not like that and action we are using for taking sometghing for impletement in fuction.For making todo we have to mention a todo in addTodo like addTodo:(state,action)=>{const todo={id:nanoId(),text:action.payload}} in addTodo for first we cretae a id according to the nanoId fucntion and for accesing some data we use text and for update state we use state argument for that we wirte a code in addTodo like state.todos.push(todo) in that code we update deafult state and a new todo push in todos deafult todo.In removeTodo we write removeTodo:(state,action)=>{state.todos=state.todos.filter((todo)=>todo.id !== action.payload)} in removeTodo we update the state of todos of which id is come if it is not match the remove action id according to the action.paylaod then add them in todos. that means which id is same then again is not show in todos.After that we indiviually export all fucntionlity in todoSlice using of a code and export them export const {addTodo,removeTodo}=todoSlice.actions.Still store is empty for awarennes of all fucniton in store for them we wirte or export one more thing export default todoSlice.reducer.Now we further we move to the store file in we import todoReducer for knodlege of reducer in store.and after that we wirte in store=cinfigureStore({reducer:todoRedcuer}) if we have more reducer then we mention here all redcuer, now only we have one then only mentioned one.after that we create some component in components name of folder the components as addTodo.jsx it is a form of input and todo.jsx where we have show all todo.For adding todo we have to add in store for them we have to dispatch todo in store.the dispatch the using of reducer value store on store. use of dispatch is simple write const dispatch=useDispatch() and after that in fucniton of working dispath them using of dispatch(addTodo(input)) AFter that clear the input using of setInput('') . Now we have to use useSlectore for taking item or value in store we use useSlector and state. and it is done in todo.jsx where we show all item or value or todo.for use o useSlector we write a fucniton and mentioned them like const todos=useSelctor(state=>state.toods) now these todos hold array of todo.for access we write a code for ittration {todos.map((todo)=>(<li key={todo.id}>{todo.text}</li>))}.After that for remove element we call onClick method and in method we write onClick={()=>removeTodo(todo.id)}. for include Provider for run these proper store. we import Provider and store in main.jsx we also done in app.jsx.But now we are doing in main.jsx, The app element wrapped in Provider and in Provider we pass the a value like store={store}.After the we insepct and anylyzing by using of a feature that's called redux.After that it's done.

Lecture 17 {Our Mega Project}
In these lecture we are discuss about making a mega project. In that we are doing blog post website in that we are using many complex things.In them we are doing login,signup, write post,edit post and use of many complex things and making a good project.

Lecture 18 {What do and How do In project}
React is Frontened Libray, the Means of that their not depend on database,all the work of backend authentication,authization that we are not do in react.we are use Recat in mainly used in routing that means we are giving request on backend and then the backend gives data, what data is give we handle it , which way are store in store or store in local storage or store in cookies.
In for working in backend we are use for login,signup feature that is not enough we also do in if user succesfull regsuter then some res come if the any error are occur then we send another res.
For backend service we use appwrite application,In them we use many services in projects like authenication of user or user data. In their we use datatbase and storage feature also in storage we use store for store images file and another file.In these project we create a blog database in that we have a article and in article have some id ,title,content,featurImage id,user id ,status is te all files also caledd attributes.In the setiing we see or modify who edit the post who read the post many things for user.
In that we also use tinymce which is the components of react.It is the text editor for blog post.
In the aricle we store in all thing in html.the html directlly not redning on we page so for that we have to parsing it.For parsing we use a library html-react-parse.
In that we also used React hook form. It is the used for more error handling on form input.
Also we some talk to the environment varibale for secure secret key and many things secure.

lecture 19 {env and appwrite}
In that leture we are discuss about env and appwrite.The env is a type of file in that we are write dome secure code or id which is presnt on your pc or related database web or app and these file is not push on any place like github or any other.In env file write write any url for them he started that was depentent on way of making project.for example if you use making these react project using of react then you have to write started on url in env is REACT_APP and id you using vite the you have to started VITE and their also have deffiernt way of accesing for exmaple if you use react then you use process.env---- and after write the variavle url and if you using vite then you have to write for access import.meta.In that project we are write many variable in env file likeVITE_APPWRITE_URL="",VITE_APPWRITE_PROJECT_ID="",VITE_APPWRITE_DATABASE_ID="",VITE_APPWRITE_COLLECTION_ID="",VITE_APPWRITE_BUCKET_ID="".env after that write url name.In that first we have to write url of appwrite which is present on frist open appwrite web or app then create new project and after click on setting and their have api endpoint url copy and paste on apprite url which is present on env file.After that we here also project id also copy them and paste them in env on project_id variable after we have to take database for that first we create new database for that we are click on database section and create new database which name is blog and copy the url and paste them. after that we have to want collection_id for that we create new collection which name is articles. now we have to some setup on that collection,goto collection setting and give all user permisson after we have to create some attribute of that for that we are go on attribute section cerate their many attributes that is Title,content,featureimage,status,userid and also setup a indexs which name is status. after that we have to want buket_id for that we are going on stoarge section in that create a buket for image and copy the url and paste them. after that we have setup some setting their for that goto setting and give all permissio to all user.

lecture 20 {Appwrite autherntication}
In that lecture we are discussion about appwrite. Their have multiple services like databases services,autherntication services,things which upload or delete services.We are discussion about all the things.Their are one concept are born wender lawking.write your code like that when you in tomorrow you need to exit the authenication system form aapwrite,then the apllication is too start no any impact on appliaction,the application work continusly.Their are one conceft are born that's called services wher we make a class,the serivies ot class making like that in the class method what happen does not mean on anyone,this is called what data you need,take or use my method and enjoy.
After that we are going to the read the documents of appwrite. their we are read Autherncation, how make and how mangae them,How make accounts,how make signup,login methods.for make authication system for that first create new Client in the we have to set up endpoint and project id.after that make account.
Now we are stared the making auth service for them first create appwrite folder and in them make a file name of auth.js.In them we have to using some .env file information so for that we import confi from a confi file in their we are we have all env file information.After that import Client,Account,ID from appwrite.After that making managbel code for first we export a class which name is AuthService.after that we export them AuthService.In that mean anyone when use class then he have make a object if he do then he able to use all method.so for that we make a object and then after we export them these is the better approach them.for them we make another variable name is authService and create new AuthService() after the export them authService.In their if we use any method then only write authservice. and write method name and access the method.You use new keyword then that ovboius you are able to use construtor.after that we have to make two things one is client and another is account,In account all opertaion was done.Now we make two property in our class for the make client property client=new Client() and normal write account,we here not create account as a property because in first we have to set setEndpoint and prodcutid.We want when the object authService is make then call the class and then client and then account access we have.when object is made then one fucntin is automatic run that's called constructor.so we make a constructor in class and in constructor we take refernece of client using of this keyword and set EdPoint and Projectid using of env file.Now we create account for that we write this.account=new Account(this.client).Now we have to create account for that we have to only write account.write() and in parenthesis give id ,email,... and these acoount come on a promise so alert.So for that we make a method fro them we use async and await beacuse it's on a promise and we want untill he don't process he don't go forward.so for that we write async createAccount({email,password,name}){} we take three parameter for create account.it's possiblity to some error accured in them,so for that we use try and catch.in catch we throw a error.that after we are move on try ad now what we try for first we have do await ,after that what we have await account.so for that we write await this.account.create(ID.unique(),email,password,name),after that we use await then we store them in a varibale the varibale is const userAccount.After that we have to check the userAccount is create or not so for that write condition for them if(userAccount){}else{return userAccount}.After that we make another method login.so for that we first write async login({email,password}){} and in under we use try and catch method.in catch write throw error.after that we go to the try and in write await this.account.client.account.createEmailSession(email,password) and after that return them.and after that if move to the createAccount method in themif we are create accoutn then after we are login also so for that in if section we write return this.login(email.password).After that we make another method in that method we have to check user login or not and where is landing.So for that we write await getCurrentUser(){} and in them we use try and catch,in catch we console a error ("Appwrite serive :: GetCuurentUSer :: error",error) after that we move on the try and write await this.account.get() and after that return them.and for using of if else because in them user here or not so for that after try and catch write return null, if try and catch not worked then return null.After that we make another method that name is logout. so for that we use delete session. for making them we write async logout(){} andin under we write try and catch,in catch console error ("Appwrite serive :: logout :: error",error).after that move to the try and write await this.acccount.deleteSessions() these for all deleteSession for when we delete in all browerr data and in all where he login.and if have to logout currnt browser then we write deleteSession('cuurrent').

lecture 21 {Appwrite databases,file upload and custom quesries}
In the making of service is dependent on the project,In that project we are making a blog post project so for that we have to upload image or many work of storgae and come data goes to the database in collection. so for that in that lecture we are making a serivices related to the database,file uplaod and some custom queries.
Now we are started first of all we make a file which name is config.js in the appwrite folder.It is a also type of services like that auth.js so for that we doing something about auth.js like import conf and Client,ID,Database,Storage,Query form apprite after that we make a class name is Service and export them after that we make a object of that using of new keyword and store them in a service after that export them in a default.After that we are moving on Service class in the first we make new Client in a clinet after that only decalre databases for create database and doing some opration them after that we declare bucket for store the file or image.After that we are using consrtcutor.In Constructor we store endpoint and projectId in client after that also create databases and bucket.After that we are moving to the making method.In first we make a method that name is createPost using of async and take parameter title,slug,content,featuredImage,status,userId.After that we use try and catch and in catch we console ("Appwrite serive :: createPost :: error",error) and after that move on the try and return a await in  databases.createDocument('[DATABASE_ID]', '[COLLECTION_ID]', '[DOCUMENT_ID]', {}),In the Databaseid and collectionId enter using of env file,In the place of documentId we use slog and in the empty object we use the all paramters which have.After that we make another method that name is updatePost and in them use aysnc and give parameter title,slug,content,featreImage,status,userId.for giving update document id we frirst give slug and after the remain parameter send in the form of object.After that we take try and catch in catch we conolse error and in the try reaturn a await databases.updateDocument('[DATABASE_ID]', '[COLLECTION_ID]', '[DOCUMENT_ID]').In the databaseId and collectionid use env file and in documentid use slug and after that in a form of object write parameter which you send.And same as make another method delete metdhod deletePost and in paramter only use slug for documentid.and in try and catch in end return true in try and false in catch.After that we make another method for access one post so for that we make getPost and give paramter a slug for documentId.and od same as updatepost or deletepost.After that we make another method hwere we take all post so for that we use listDocumentdatabases.listDocuments('[DATABASE_ID]', '[COLLECTION_ID]') in that only we have to take databaseid and colection id which be on env file.In that if we take all post then all post come,post is active or not.so for that we have to use query for that.So for that we make another method which name is getPost in that we take all post using of query.The method name is getpost,in that we write query for which status active post are access.SO in parenthesis write queries=[Query.equal("status","active")].And in the method we use try and catch,in catch do console error and return false and in try retrun a wait of listDocuments for show document and in the listdocuments write databaseid,documentid and quesires.And after that we write another method or service which is for file upload service.So for that we make two service upload file and delete file.So first we make a new method that name is uploadFile and use async and take a file as a paramter and after that in method use try and catch,in catch do console and retrun false.After that move in try retrun a await  storage.createFile('[BUCKET_ID]', '[FILE_ID]', document.getElementById('uploader').files[0]).In the buketId take in env file,in file id write ID.unqiue() for unique,and after third parameter is a file,so write file,which is a file.After that we make delete file so for taht we make the deleteFile and write all thing same as createFile,te paramter is fileID and in try write  storage.deleteFile('[BUCKET_ID]', '[FILE_ID]').wirte biketiD using of env file and in fileid take in parameter.and write return true.After that we make another method for file preview.In the preview he does not retrun promise so in that we not use of async and await.The method name is getFilePreview andin paramter fileID and after the retrun buket.getFIlePreview and in teh give buketid and fileid same as deleteFile.


Lecture 22 {Configure redux toolkit}
In these lecture we create store in that big project and learn configure redux toolkit in big projects.
let's start first of all we create a store.js file in store name of folder for making a store.now simple create store jsut like we do in last project like import cinfigureStore make a varibale store and them use configureStore and in them use reducer abd after that export them in default.Now after that we have to create reducer or slice so for that first we create a file which name is authSlice and after that in them import createSlice.In the creating slice we have to give name,initialState and reducer so for that first we make initial state,in initialState we set two default things that is status which give false and userData which we set null.Now we create slice which name is authSlice and after that we use createSlice and give all three things in object that is name:"auth",initialState,reducers:{}.After that we have to export two things one is reducer in authSLice so for that we write export default authSlice.reducer and another is the reducer indivuial methods we to export them,because in differnect components the method know about his state and dispatch them differntly.So for that we have to make method in reducers.For that we make two reducer methdod login and logout, in login we chage status using of state and also set userData using of state and give action.payload.userData And in logout change status and give false because if you are logout then your status is false and in userData we give null because when you logout ypur data is clear.after that export them in individually.SO for that we write export const {login,logout} from authSlice.actions.
Now we make components so for that we make a folder which name is components and in componnets we make two folder Header and Footer and in them we make two file Header.jsx and Footer.jsx respectively.And in them we simply import react and make fucntion and do return and export in default also.For export them ina one way we make a indes.js file in components and import Header.jsx and Footer.jsx and export them in a object.Now we are move to the app.jsx because the major work of our project is here.we have to see that when the web is load then user is login or not and he login then what is see in web.And these is seen in state direct.If user is login then we see something to user.So for that we make a state loading,because if we are using database so the network requesting is waiting so for that the loading state is good because the data is not our local state, the data is on the database.In that we also do condianl rendering apply if and else,if loading is true then we show loading icon and is not true then we show data.SO for that frist import something like React,{usestate,useEffet} from react,useDiapacth from react-redux and authService form appwrite folder.after that we make loading varibale in useState and set default true and also we make dispatch fro something dispacth.In frist time when web is laod then useEffcet and aksed user is login or not.After that we use useEffect and in the useEffect we write authService.getCurrecntUser() call them and take current user after that use .then() and .finally(),we also used catch instaed of finally but we used finally because finally always run.So in then we call a callbak and take a paramert user data as a userData and nnow use condition if(userData) have then dispatch userData in login method which are present on authSlice and if user data not found then dispacth logout for update the status or state and in finnaly we have a callback and in the callback se chnage the loading state using of setLoading.now we return according to the loading so for that we have many approcah one is use if and else and another is return !loading ? () : (null). if loading is doen then we wirte in first patranthesis and if laoding is not complete then we return null.Now we retrun in first paranethsis first we give one div.in dib we add a sub div and in these div we render Header and Footer componetnts an in between them we render a outlet in main tag.SO now we are move to the main.jsx file and in them App comenet we provide them in a Provider and in Provider pass a props store with value store,import them also for use.For make directeries for that we make a folder page.

Lecture 22 {Prodcution Grade Element}
In that Lecture we are discuss about how to make any element in prodcution.Just like it when we have to make a form their have many input filed,So normally we are do it in make all input feild but in production make one input filed file in a differnt file and use the file for many filled used of passed props.In the Header also we divided into two parts that one is basic header and another is Logout button.
Let's started so for the first we make a folder that name is container and in the a file that name is Container.jsx.In the Conatiner.jsx first import react make a function name of Contaner and then export them in default,after the give a parameter to the function that name is children.the container is accept property as a form of children,container is type of box like main.jsx is between the header and footer,in the container we give height and width or we say that we give styling property.In the function we return a div,in that div we give className such a w-full max-w-7xl mx-auto px-4 and in div write {children} for access children in div.Now we are move the footer file in the file content we take form notes or github file,in the file we see the their have many tags or element such as logo,link.the link we import from react-router-dom and for the logo we make another file on src directory,that name is Logo.jsx.In the file first we import react,then make funciton that name is Logo and then export them in default.in that we function we take one parameter for image or logo content size,that is width:"100px". and then reaturen a div with content of write Logo.Now we further move to the header part,Header part is a optional because in the header all vaue don't show in one time,specially logout option whose show and whose show not obvious that thing we have to judge.how we judge it,who is login or not that is basis we judge them.so for that we make a file that name is LogoutBtn in Header folder,import react and make function that name is LogoutBtn and export them in default.In the LogoutBtn that is abvoius we have to take action,something we have to dispatch,take reducer from store.So for that we import useDipatch from redux-router and import authService because functionlity of logout is on authService and also import individual logout for use from store.For using useDispacth make a variable and use them.In that we use button so for that we make a btn handle fucntion that name is handlerLogout,in we use logout fucntionality for that we write authService.logout() these come on in a promise so for that we write after .then() and in the callback function we dispacth the logout fucntion.now in these fucntion we return a button with some className like inline-block px-6 py-2 duration-200 hover:bg-blue-100 rounded full and in button write Logout.Now we move to the Header,in the header we write all link,but logout is show or not it is we render condioanlly.so for that we first import something like Conatiner Logo LogoutBtn from index,Link from react-router-dom,useSelctore from react-redux,useNavigate from react-router-dom.we have to take in state to is these authenticate or not,so for that write const authStatus=useSelectore((state)=>state.auth.status),for use useNavigate we use them in avariable that name is navigate.When these type of navigation bar making for that making a array and then loop them.so for that we write const navItem=[],in that array we handle many objcet.Each object we write three things name,slug,active and fill them according to the link for making Home we write in object name:'Home',slug:'/',active:true.and remaing we taking on notes like for Login,Signup,All Posts,Add posts.Now we are write some content for that we write return and in return we write header and in header give className and give py-3 shadow bg-gray-500 and in header use Container element,the navigation bar under the Container,in that first we take nav element and then we take Logo and then in unorderd list use loop.Write nav in conatiner and then write div for logo and logo wrpaped on Link.Now we move to the out of div.now write a ul and in ul tag we use navItem array for that we write {navItem.map(()=>())}.in the function we have one paramter item for each object in array.in that item is active or not that basis we work fruther.for that we write some simple syntax like item.active ? () : null. if it is active then we write (<li key={item.name}></li>).in li we write button tag and in tag {item.name},we have to write some property in button,so for that we wirte onClick={()=>navigate(item.slug)},and also add some className.For logout we have a authStatus and we know that we have user active or login or not in authStatus then we ask authStatus is true then logout show otherwise not.so for that we write use another react tag {} after that write authStatus && (<li><Logout></li>).now we make another components button for that we make a file in comonents that name is Button.jsx.first we import react then make a function that name is Button and then export them in default.In function first we passed some paramter such as children for content,type for define button',bgColor for backgorund color, textColor for text color, className for difine some class,...props for remain arugumnet,in that we define some default value.After that we are going to return and return a button,in props we passed bgColor,textColor,className in classname in `` form in curly brackets and also passed remaining in ...props."Example of forwarding referncing we make a login form for them we have a input filed is differnt place that same filed we use in username,password all where we use them.the login page is differnet place and that state is differnt place and the state access we want in login page so for that we give refernce to both,so in that case we use a react hook that name is forward refernce".Now make another component in components that name is input.jsx.In that first we import React and useId from react and then make a arrow function that name is Input and then export then in default.so for that we write const Input=React.forwardRef(function Input(){ return <h1>test</h1>}) and now we use some paramter in object like label,type,className,...props and out object pass ref.now we move return,in return write div element and then write javascript code for label like label && <label></label> that means if label is passed then label element is work and in label we passed some classame htflFor={id} for id and after that these tag we write label in curly brakts.Now we write another tag that is input tag,in that tag we passed type={type} className={} in classname first write class whcih you write and then write a variable which we passed in aparamter and then we write ref={ref} that is used to take refernce of parent element, that for we use forward refence.compent is differnt,refernec want other place,refernce passed from other place to these place,and then their take access of state.and then write {..props} id={}. 


Lecture 22 {React hook Form}
In the lecture we are studing about react hook form what is these and how use these.
Now we started for first we make select element for options menu,so for that first we make a file that name is select.jsx.first we import react and then make a fucntion that name is Select and after that we export them in a default.In that fucntion we take some parameter such as options,label,className="",...props and take oursite that ref.for taking id use them.Now we move to the return part,in that first we write a div that div give className w-full,now write under div {label && <label></label>} that means if lebel is present then the label tag is active.in label we passed htmlFor={id}.Now we write another tag that is select in the select we passed {...props},id={id},ref={ref},classname taking to notes.Now we write options in select,the options come in form of array so for that we have to use loop.We don't use direct map in options their is any case when options is empty then our app is cresh so for that first we check the options empty or not.for that we write {options ? .map()},in map we have callbcak (option)=>(<option key={option} value={option}>{option}</option>).In that element their is one bug.the bug is we don't use of forwardref for using that in another way we export the select in React.forwardRed(Select).Now we make naother component that is card and that file name is PostCard.jsx.In that we frist import the react and then make a fucntion that name is PostCard and then export them and then we import teh appwriteSerive from config and then link.In fucntion we passed some parameters such as $id,title,featuredImage. and then now we move return.for making post clickable we used Link tage and in tag we pass a props that is to and in to we write /post/${$id} for link.In Link we write a div and in under we write another div in that div we write img tag, in tag the src attribute we have to passed way of src of image so for that in last we make a method getFilePreview that for view of file use them,so for we write in src appwriteService.getFilepreview(featuredImage),in alt give title also add className.Now we write h2 tag in that div outsie and that tag we write title.in h2 atribute we passed some className.Now we make another components that name is Login.In that components we make a login form,so for that we create new File in components folder that name is Login.jsx.first we import React,Link and useNavigate from react-router-dom,login from authSlice(the login as authlogin)means we use login as a authlogin in that file,Button and Inpu and Logo form index,useDipacth from react-redux,authService from auth,useFrom from react-hook-form.Now further we make fucntion that name is Login and export them in default.In fucntion first we used all importing things,so for that for useNavigate store and use in navigate name of variable,for useDisaptch store and use in dispatch name of variable,useForm store and use in {register,handlerSubmit} name of variable,useState store and use in [error,setError] name of variable.Now make a method that name is login.that is in async because that's abvious information is sumbit then after information comeback then some big things happen.in async(data)=>{}.In that fucntion first write setError("").when login is set then first error do empty out,These is the basic fucnitonality.The all login form and register form make like these.After we use try and catch.In catch if error found then again we use setEror and set error.message.Now we gone to try and write await authservice.login(data) in we called login method and that store in a variable that is session.In that we have a session,in that if session if found then user is logged in and if session not found then user is not logged.so for that we use if and else,in if(session) then write const userData=await authService.getCurrentUser().if userData is found then we have to dispatch them,so for that write if(userData) dispatch(authLogin(userData)) and then navigate them '/'.Now we move to the return and in return write div and that write another div write all classname to the notes,under that we again passed another div and in div call logo conponent.Now goto out the current div and write one h2 that tag write Sign in to your account.and after we write a p tag take to the notes.For showing error write after p tag {erorr && <p>{error}</p>}.After that do main work that is making a form so for that write form tag,in form tag pass onSubmit and them call handleSubmit(login).That means handleSubmit is a method their we passed our method.In from take a div,in div we call Input components.For first we call Input for email so for that we passed many things such as label="Email",placeholder="Enter Your email",type="email",now we write a javaascript,{...register("email",{})},... is comaulsary,in the register first take key value which we taken "email" and another is object their we passed option we have many option,the normal used option is required:true,validate:{matchPatern:(value()=>)}(take to the notes).Now same as we make another Input components for password.That after we write button tag and write sign in.Now just similar we make another components for sign up.the component file name is Signup.jsx.Now we make another components that file name is AuthLayout.jsx this is for authentication layout.these is a type of mechanism that which way pages or routes is protected,these is a protected container.in that file first we import react then make a fucntion which name is Protected and then export them in default.In function we passed some parameters like children and authentication and set authentication is true,we take its true but who call these component that give value false then we only check value that basis of what is authenricaton then we updated them.for using some things for that we import some things like useEffect and useState from react,useSelctore from react-redux,useNavigate from react-router-dom.now we move on the funtion and use useNavigate and store them in a navigate,now we use useState on const [loader,setLoader] and set default value true.now for taking status wirte const authStatus=useSelctor(state=>state.auth.status).we don't use it diract we use useEffect,for that we write useEffect(()=>{},[]),now first we define depencies array that is authStatus,navigate,authntication.now we move to the callback,in check if(authentication && authStatus !==authentication) and after write navigate("/login").it means the both is true then you move to the login page it means you are not accespeble now because if authentication is true it menas user not send anything because we set deafult true and authstatus passed false and authentication is true then that condition is true then you render to the login page,now we chekc another condition that is else if(!authentication && authStatus !== authenitication) and navigate("/").and after that we do setLoader false.in return we return loader is true then we give loading in h1 and if loader is false the passed children.

Lecture 22 {Adding form and slug values}
In the electure we are discuss about RTE that's also called Real Time Editor.in that the RTE is make separeate component or wraped into forwardred hook then accesss them,but in that we have react-hook-form for them how do smae technique we see it.The form we design inersting because the same form is used in post sumbit,edit exactlly these is same content,if you want edit then give the same content relaod and if you want ceate then give empty value.In that we also discuss about slug,which way used useEffect,we do a input tag track and that basis we design slug,if the he added space then we - instead of it.
let's started the making new component,for them making new file on components folder,that file name is RTE.jsx.and normally do work of import react and make function and export.we want manily two things,for them we import Editor from @tinymce/tinymce-react.The Editor is so basic if you that place diract return Edior then it is too easy for them return element Editor,in them many values like initialValue for default value,init for when you intialize then what you want give,toolbar.but we don't return direct because the editor is desgined separete place as a seprate component, you use it many place like form,in post from,for that how we get refernce.For that promblem we don't return editor direct.so for that we use Controller,so we first import them from react-hook-form.Now we are moved to the function,in them first we take some paramter like name,control it is come on react-hook-form these control is responsible for send state form these way to those way,these coontrol is pass when we used RTE,lebel,defaultValue="".Now we move to the return,in that first write a div and give a className and not check label if lebel is not empty then write label tag and use them.After that we write Controller,in that we give some props like name={name || "content"},control={control},now we render in that we write a callback function,in render callbak we write {filed:{}} and in object we give the many event, in that we give onClick,it means if it click them then render it.and in fucntion write hwich element you want render,like input,Editor.In them we write Editor taking it on notes.These is done we handle it many things now we have another task how use it.Now we make Another component that name is PostForm.jsx make in the post-from folder and it make on components name of folder and do normal work like import react,make function and export them.now for use many things first we import them such as useCallback,useForm from react-hook-form,Button and Input and Select and RTE from index,appwriteService from config,useNaigate from react-router-dom,useSelctor from rect-redux.Now we come to the fucntion for working on fucntionality.First we use useForm,the useForm give you many fucntionality like register,handleSubmit,watch that give you watching capabilities,for them you personal monritor continously on any filed,setValue in that you set the value on form,control for taking control of any filed,these control we diract use on RTE,getValue for grap value of form or filed.In that useForm we give a object in that we give many things like defaultValue that means what you give in default in the defaultValue we give many things but for now only we take title,for them if you come on for create on new then the title is empty and if you come for edit then we have to give some default content or value,so for that who use it form they give it for them we take a parameter that name is post.In defaultValue,in title use first we chekc we have post if post are here then give title otherwise give title empity write like these post ?.title:'',just similar do fro slug,content and status in status by default set active.After use of useForm we use useNavigate and store them in a navigate.after that we take userData for taking that we write useSelctor(state=>state.user.userData).After that we are looking for form submit if user submit the form then he give userData.first we make sumbit name of button then we see how is work.Is their two cases the post value already there if it's here then updated him,if post value are not here then create new entry.so for that we make sumbit valriable and in them write async (data=>{}),in fucntion first we check if post is ere then do updated,for them we handle file.for doing these file take and upload them.In the data direct access of all them,so for using it we take image and check if image is here then upload image them we write and use apprtie serive and use uploadFile method and upload them and store them in a variabe which name is file.if we found new image or file then we have to delete old image or file so for that we use apprtite serviece deletetion method and delete them.After that we updated them so for that we write const dpPost=await appwriteService.updatedPost() in their we want some paramter such as for slug we pass post.$id and for reaming we pass spread data,= and overwrite featuredImage.if dbPost is updated then we navigate him to /post/${dbPost.$id}.these if for if you have post else if you don't have post so for that first we take file on using of appwriteService and use uploadFile medhod.after that if file is here then take fileId using of file.$id then used these fileId in data.featuredImage and then crate post using of method of appwriteService and them data spread and then take userId using of userData.$id and after that store in dbPost.after that if your dbPost is ready them navigate them in /post/${dbPost.$id}.Now we make new method that name is slugTransform in their me make slug from title or any other if usergive space then instaed of space we have to gie -.in them we use useCallback and in we write useCallback((value)=>{},[]).in the function first we check value is here not if value is here then agian check one thing like typeOf value if it is string them return a value with some opration like .trim().toLowerCase().replace(/^[a-zA-Z\d\s]+/g).replace(/\s/g,'-')after that if it i not here then return empty.After that we use useEffect for that we write React.useEffect(()=>{},[]).in useEffcet dependices we write watch,slugTransform,setValue.after that we do in fucntion const subscription=watch((value,{name})=>{}),and making it's a fucntion nd give paramter value and name after that if name is equal to 'title' then setValue('slug',slugTranform(value.title,{sholudValidate:true}))  and return  a callback and do subscription.unsubcribe().after that in return we return a form and we taking it on via notes.


Lecture 22 {Building Pages}
In that lecture we make a pages.
Now we started making pages,so for that first we make a folder on src folder that name is pages.In that first we make Signup page so for that make file in pages folder that file name is signup.jsx,in that first do basic things like import react and make fucntion and export them and now reaturn a div and in under the div we call signup component import them and name as signup Component and use them.Just similar we make a Login page.Now we make another page for AddPost in that page we make a file which name is AddPost.jsx in them we import react,Container and PostForm and after that we make a function and export them and after that in function return a div,in div call Conatainer and in container call PostForm.After that we make another page for show all post so for that make file that name is AddPost after that first we import such as React and useState and useEffect from react,Conatiner and PostCard from index,appwriteService from config.after that we make a fucntion and after that we export them.now we move to the fucntion and in fucntion we work on fucntionallity for showing all post,so for that we create varibale for post or use useState so that we write const [posts,setPosts]=useState([]).after that use useEffcet and use a callback and dependencies.In callback we take all post using of appwrite service and take them in empty array so for that we write appwriteService.getPosts([]) if it's done then write .then((posts)=>{if(posts)setPosts(posts.document)}).for doing that all post all come in posts name of variable in document format.After that we have to only use loop and return.so for that we we move to the return and write a div and in the div we use Conatiner and in the Conatiner take one div and write some classname for more arrangemnet of post after that use loop in javascript format.so for that we write {posts.map((post)=>(<div key={post.$id} classname=''><PostCard post={post/></PostCard></div>))}.Adter that we are making page for edit post.so for that we make a file for it that name is EditPost.jsx and first we are import some thing like React and useEffect and useState from react,Container,Postform from index,appwriteServoce from config.After that we make a fucntion and export them.in Function first we take post so for that const [post,setPost]=useState({}).In for taking slug we use useParams() and also use useNavigate in navigat.after that we use useEffect.In depenceies we write slug,navigate and in callbakc check slug is here or not,if here then take post using of slug and do setPost post using of appwrite service getPost method.and if it is not here then navigate('/').after that return according to the post,if post is here then retrun a div and in div use Container and in conatiner use PostForm and pass props post={post}.After that we make another page that page is for Home so for that file name is Home.jsx.first we import something like React and useEffect and useState,appwriteserivice form config,Container and PostCard from index.After that we make a fucntion and export them.Now we move to the fucntionality of fucntion.first we take varivale of post for store post for them we use useState.After that we use useEffect and in the callback we take all post using of getPosts methpod and posts documents is store in posts using of setPosts.now return accoridng to the post,so for that first check if(posts.length===0) then we return no any posts found.that after we return a div ann in under that use Conatiner and in the conatiner we wirte all post.If you give post that way <PostCard post={post}> then only one post are show,for show multiple spread the post.After that we make another page so for that we make file that name is post.jsx taking into the notes.After that all pages are done so now next we do routing for rendering the pages.SO for that we are moving the main.jsx file and writing code for routing so for that write const router=createBrowseRouter([]) taking objct between the array and od routing for it like write each object like path means path for element,element for whcich element you want render,children its taking array and between the array we take object.so for them frirst we render App and then in under the app children we pass remaning with give AuthLayout for element want to authenicate or not.



